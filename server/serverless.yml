org: ahmedshams
app: sls-mk-cms-server
service: sls-cms-server-app

custom:
    env_src: ${opt:env_src, 'default'} # pass a CLI flag to serverless commands to change environment var source
    # i.e. `sls deploy --env_src=testing`

provider:
  stage: ${env:DEV_NAME, 'dev'} # if DEV_NAME is set it will deploy to that stage, defaults to stage=dev
  name: aws
  runtime: nodejs8.10
  memorySize: 512
  # env file is sourced from the specified path
  environment: ${file(config/${self:custom.env_src}.yml):}

region: eu-east-1

plugins:
  - serverless-offline

functions:

  # hello:
  #   handler: index.handler
  app:
    handler: index.handler # reference the file and exported method
    events: # events trigger lambda functions
      - http: # this is an API Gateway HTTP event trigger
          path: /
          method: ANY
          cors:
            origins:
              - http://localhost:3000, http://ec2-3-91-156-213.compute-1.amazonaws.com # ! add origins here
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http: # all routes get proxied to the Express router
          path: /{proxy+}
          method: ANY
          cors:
            origins:
              - http://localhost:3000
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
    timeout: 15 #  very high bc cold starts are slow with lambda in VPC + auroura sls may be in sleep mode depending on settings

    vpc:  # TODO make this dynamic based on acct / environment
      securityGroupIds:
        - sg-5216e11e
      subnetIds:
        - subnet-78e96a56
        - subnet-1c880940
        - subnet-2542166f
